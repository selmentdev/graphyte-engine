{
    .ProjectName = 'com.graphyte.geometry'
    .ProjectPath = 'engine/runtime/libs/geometry'
    {
        .UnityInputPath = '$ProjectPath$'
        .UnityInputPattern = { '*.cxx' }
        .UnityOutputPath = '$OutputBase$/unity/$ProjectPath$'
        .UnityOutputPattern = '$ProjectName$-unity*.cxx'

        Unity('$ProjectName$-Unity-Windows') {
            .UnityInputExcludePattern = {
                '*Linux.*.cxx'
                '*Posix.*.cxx'
                '*Android.*.cxx'
            }
        }
        Unity('$ProjectName$-Unity-Linux') {
            .UnityInputExcludePattern = {
                '*Windows.*.cxx'
                '*Android.*.cxx'
            }
        }
        Unity('$ProjectName$-Unity-Android') {
            .UnityInputExcludePattern = {
                '*Windows.*.cxx'
                '*Linux.*.cxx'
            }
        }
    }

    // this module applies only on windows-x64-msvc build
    ForEach(.Config in .Configs_Windows_MSVC_x64)
    {
        Using(.Config)

        ObjectList('$ProjectName$-Lib-$PlatformInfo$-$ArchitectureInfo$-$CompilerInfo$-$Config$')
        {
            .CompilerInputUnity = '$ProjectName$-Unity-Windows'
            .CompilerOutputPath = '$OutputBase$/obj/$ProjectName$-$PlatformInfo$-$ArchitectureInfo$-$CompilerInfo$-$Config$/'

            // Common Graphyte module include paths
            .CompilerOptions
                + ' /I"$ProjectPath$/private"'
                + ' /I"$ProjectPath$/public"'
                + ' /I"engine/runtime/libs/base/public"'
                + ' /I"sdks/fmt/include"'
                + ' /I"engine/include"'
                + ' /D_WINDLL'
                + ' /Dmodule_geometry_EXPORTS=1'
        }

        ^AllObjects + '$ProjectName$-Lib-$PlatformInfo$-$ArchitectureInfo$-$CompilerInfo$-$Config$'
    }
}
