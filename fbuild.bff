#include "scripts/fastbuild/globals.bff"
#include "scripts/fastbuild/toolchains.bff"

#include "scripts/compilers.gen.bff"

.OutputBase = 'build'

#include "sdks/fmt/project.bff"
#include "sdks/glad/project.bff"
#include "sdks/lz4/project.bff"
#include "sdks/mbedtls/project.bff"
#include "sdks/vulkanvma/project.bff"

#include "engine/runtime/libs/base/project.bff"
#include "engine/runtime/libs/geometry/project.bff"
#include "engine/runtime/libs/graphics/project.bff"
#include "engine/runtime/libs/graphics-d3d11/project.bff"
#include "engine/runtime/libs/graphics-opengl/project.bff"
#include "engine/runtime/libs/graphics-vulkan/project.bff"
#include "engine/runtime/libs/launch/project.bff"

#include "engine/developer/assets/libs/base/project.bff"
#include "engine/developer/assets/libs/shader/project.bff"
#include "engine/developer/assets/libs/mesh/project.bff"
#include "engine/developer/assets/apps/compiler/project.bff"
#include "engine/developer/assets/apps/logfix/project.bff"

#include "engine/runtime/tests/executor/project.bff"
#include "engine/runtime/tests/base/project.bff"
#include "engine/runtime/tests/entities/project.bff"
#include "engine/runtime/tests/graphics/project.bff"
#include "engine/runtime/tests/maths/project.bff"

#include "game/source/app.demo/project.bff"

#include "scripts/fastbuild/build-project.bff"

{
    // All available platforms
    .GxPlatforms = {
        'Windows'
        'UWP'
        'Linux'
        'Android'
    }

    .GxPlatformArchitectures_Windows   = { 'ARMv8', 'x64' }

    .GxPlatformCompilers_Windows_ARMv8 = { 'MSVC', 'Clang' }
    .GxPlatformCompilers_Windows_x64   = { 'MSVC', 'Clang' }

    .GxPlatformExcludePattern_Windows = [
        .ProjectPatternToExclude = {
            '*/Impl.Linux/*'
            '*/Impl.Android/*'
            '*/Impl.Posix/*'
            '*/Impl.UWP/*'
        }
        .UnityInputExcludePattern = {
            '*Linux.*.cxx'
            '*Android.*.cxx'
            '*Posix.*.cxx'
            '*UWP.*.cxx'
        }
    ]

    .GxPlatformArchitectures_UWP       = { 'ARMv8', 'x64' }
    .GxPlatformCompilers_UWP_ARMv8     = { 'MSVC' }
    .GxPlatformCompilers_UWP_x64       = { 'MSVC' }

    .GxPlatformExcludePatterns_UWP = [
        .ProjectPatternToExclude = {
            '*/Impl.Linux/*'
            '*/Impl.Android/*'
            '*/Impl.Posix/*'
            '*/Impl.Windows/*'
        }
        .UnityInputExcludePattern = {
            '*Linux.*.cxx'
            '*Android.*.cxx'
            '*Posix.*.cxx'
            '*Windows.*.cxx'
        }
    ]

    .GxPlatformArchitectures_Linux     = { 'ARMv8', 'x64' }
    .GxPlatformCompilers_Linux_ARMv8   = { 'Clang', 'GCC' }
    .GxPlatformCompilers_Linux_x64     = { 'Clang', 'GCC' }

    .GxPlatformExcludePatterns_Linux = [
        .ProjectPatternToExclude = {
            '*/Impl.Android/*'
            '*/Impl.Windows/*'
            '*/Impl.UWP/*'
        }
        .UnityInputExcludePattern = {
            '*Android.*.cxx'
            '*Windows.*.cxx'
            '*UWP.*.cxx'
        }
    ]

    .GxPlatformArchitectures_Android   = { 'ARMv8', 'x64' }
    .GxPlatformCompilers_Android_ARMv8 = { 'Clang' }
    .GxPlatformCompilers_Android_x64   = { 'Clang' }

    .GxPlatformExcludePatterns_Android = [
        .ProjectPatternToExclude = {
            '*/Impl.Linux/*'
            '*/Impl.Windows/*'
            '*/Impl.UWP/*'
        }
        .UnityInputExcludePattern = {
            '*Linux.*.cxx'
            '*Windows.*.cxx'
            '*UWP.*.cxx'
        }
    ]

    ForEach(.CurrentPlatform in .GxPlatforms) {
        ForEach(.CurrentArchitecture in .'GxPlatformArchitectures_$CurrentPlatform$') {
            ForEach(.CurrentCompiler in .'GxPlatformCompilers_$CurrentPlatform$_$CurrentArchitecture$') {
                Print('$CurrentPlatform$-$CurrentArchitecture$-$CurrentCompiler$')
            }
        }
    }
}