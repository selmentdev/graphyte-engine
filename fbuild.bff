#include "scripts/compilers.bff"
#include "scripts/configs.bff"


.SolutionConfigs = {}
{
    ForEach(.Config in .Configs)
    {
        Using(.Config)
        .ProjectConfig = [
            .Config = '$Config$'
            .Platform = '$VsPlatform$'
            .SolutionConfig = '$Config$-$PlatformInfo$-$ArchitectureInfo$-$CompilerInfo$'
            .SolutionPlatform = '$PlatformInfo$-$ArchitectureInfo$-$CompilerInfo$'
        ]
        ^SolutionConfigs + .ProjectConfig
    }
}

.OutputBase = 'build'

.AllObjects = {}

.SdkProjects = {}

#include "sdks/lz4/project.bff"
#include "sdks/fmt/project.bff"
#include "sdks/glad/project.bff"


.GraphyteProjects = {}

#include "engine/runtime/libs/base/project.bff"
#include "engine/runtime/libs/geometry/project.bff"
#include "engine/runtime/libs/graphics/project.bff"
#include "engine/runtime/libs/graphics-opengl/project.bff"
#include "engine/runtime/libs/graphics-d3d11/project.bff"
#include "engine/runtime/libs/launch/project.bff"
#include "engine/runtime/libs/rendering/project.bff"

{
    .VcxProjectConfigs = {}
    .CurrentConfigs = .Configs_Windows_x64_MSVC + .Configs_Windows_ARMv8_MSVC
    .ProjectName = 'all-proj'

    ForEach(.Config in .CurrentConfigs)
    {
        Using(.Config)

        Alias('$ProjectName$-$PlatformInfo$-$ArchitectureInfo$-$CompilerInfo$-$Config$') {
            .Targets = .'SolutionConfigs_$PlatformInfo$_$ArchitectureInfo$_$CompilerInfo$_$Config$'
        }

        .ProjectConfig = [
            .Target = '$ProjectName$-$PlatformInfo$-$ArchitectureInfo$-$CompilerInfo$-$Config$'
            .Config = '$Config$'
            .Platform = '$VsPlatform$'
            .SolutionConfig = '$Config$-$PlatformInfo$-$ArchitectureInfo$-$CompilerInfo$'
            .SolutionPlatform = '$PlatformInfo$-$ArchitectureInfo$-$CompilerInfo$'
            .ProjectBuildCommand = 'fbuild -ide -dist -cache -monitor $ProjectName$-$PlatformInfo$-$ArchitectureInfo$-$CompilerInfo$-$Config$'
            .ProjectRebuildCommand = 'fbuild -ide -clean -dist -cache -monitor $ProjectName$-$PlatformInfo$-$ArchitectureInfo$-$CompilerInfo$-$Config$'
            .ProjectCleanCommand = 'fbuild -ide $ProjectName$-$PlatformInfo$-$ArchitectureInfo$-$CompilerInfo$-$Config$-Clean'
        ]

        ^VcxProjectConfigs + .ProjectConfig
    }

    VCXProject('$ProjectName$') {
        .ProjectOutput   = '$ProjectName$.vcxproj'
        .ProjectFiles    = { '.\fbuild.bff' }
        .ProjectBasePath = '.\'
        .ProjectConfigs = .VcxProjectConfigs
        .PlatformToolset = .VsPlatformToolset
    }
}

VSSolution('Graphyte')
{
    .SolutionOutput = 'gen.sln'
    .SolutionBuildProject = 'all-proj'
    .Deps = [
        .Projects = .GraphyteProjects + .SdkProjects
        .Dependencies = { 'all-proj' }
    ]
    .SolutionDependencies = { .Deps }
}

Alias('all') {
    .Targets = 'Graphyte'
}

Alias('All-Windows-x64-MSVC-Debug')   { .Targets = .AllTargets_Windows_x64_MSVC_Debug   }
Alias('All-Windows-x64-MSVC-Checked') { .Targets = .AllTargets_Windows_x64_MSVC_Checked }
Alias('All-Windows-x64-MSVC-Profile') { .Targets = .AllTargets_Windows_x64_MSVC_Profile }
Alias('All-Windows-x64-MSVC-Release') { .Targets = .AllTargets_Windows_x64_MSVC_Release }

Alias('All-Windows-x64-MSVC') {
    .Targets = {
        'All-Windows-x64-MSVC-Debug'
        'All-Windows-x64-MSVC-Checked'
        'All-Windows-x64-MSVC-Profile'
        'All-Windows-x64-MSVC-Release'
    }
}

Alias('All-Windows-ARMv8-MSVC-Debug')   { .Targets = .AllTargets_Windows_ARMv8_MSVC_Debug   }
Alias('All-Windows-ARMv8-MSVC-Checked') { .Targets = .AllTargets_Windows_ARMv8_MSVC_Checked }
Alias('All-Windows-ARMv8-MSVC-Profile') { .Targets = .AllTargets_Windows_ARMv8_MSVC_Profile }
Alias('All-Windows-ARMv8-MSVC-Release') { .Targets = .AllTargets_Windows_ARMv8_MSVC_Release }

Alias('All-Windows-ARMv8-MSVC') {
    .Targets = {
        'All-Windows-ARMv8-MSVC-Debug'
        'All-Windows-ARMv8-MSVC-Checked'
        'All-Windows-ARMv8-MSVC-Profile'
        'All-Windows-ARMv8-MSVC-Release'
    }
}

Alias('All-Windows-MSVC') {
    .Targets = {
        'All-Windows-x64-MSVC'
        'All-Windows-ARMv8-MSVC'
    }
}
