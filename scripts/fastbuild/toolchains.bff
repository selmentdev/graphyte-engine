#include "../compiler.msvs.bff"
//--------------------------------------------------------------------------------------------------
// Toolchain definitions

// Windows Resource compiler
Compiler('Compiler-Windows-ResourceCompiler') {
    .Executable = '$WindowsSdkLocation$/bin/$WindowsSdkVersion$/x64/rc.exe'
    .CompilerFamily = 'custom'
}

Compiler('Compiler-Windows-x64-MSVC') {
    .Root = '$VsToolsLocation$/VC/Tools/MSVC/$VsToolsVersion$/bin/HostX64/x64'
    .Executable = '$Root$/cl.exe'
    .ExtraFiles = {
        '$Root$/1033/clui.dll'
        '$Root$/1033/mspft140ui.dll'
        '$Root$/atlprov.dll',
        '$Root$/c1.dll'
        '$Root$/c1xx.dll'
        '$Root$/c2.dll'
        '$Root$/msobj140.dll'
        '$Root$/mspdb140.dll'
        '$Root$/mspdbcore.dll'
        '$Root$/mspdbsrv.exe'
        '$Root$/mspft140.dll'
        '$Root$/msvcp140.dll'
        '$Root$/tbbmalloc.dll'
        '$Root$/vcruntime140.dll'
    }
}

Compiler('Compiler-Windows-ARMv8-MSVC') {
    .Root = '$VsToolsLocation$/VC/Tools/MSVC/$VsToolsVersion$/bin/HostX64/arm64'
    .Executable = '$Root$/cl.exe'
    .ExtraFiles = {
        '$Root$/1033/clui.dll'
        '$Root$/1033/mspft140ui.dll'
        '$Root$/atlprov.dll',
        '$Root$/c1.dll'
        '$Root$/c1xx.dll'
        '$Root$/c2.dll'
        '$Root$/msobj140.dll'
        '$Root$/mspdb140.dll'
        '$Root$/mspdbcore.dll'
        '$Root$/mspdbsrv.exe'
        '$Root$/mspft140.dll'
        '$Root$/msvcp140.dll'
        '$Root$/tbbmalloc.dll'
        '$Root$/vcruntime140.dll'
    }
}

// Windows specific toolchains

.ToolchainDefinition_Windows_x64_MSVC = [
    .ToolchainName = 'Windows-x64-MSVC'
    .Compiler = 'Compiler-Windows-x64-MSVC'
    .ResCompiler = 'Compiler-Windows-ResourceCompiler'
    .Linker = '$VsToolsLocation$/VC/Tools/MSVC/$VsToolsVersion$/bin/HostX64/x64/link.exe'
    .Librarian = '$VsToolsLocation$/VC/Tools/MSVC/$VsToolsVersion$/bin/HostX64/x64/lib.exe'

    .ToolchainArchitecture = 'x64'
    .ToolchainVsPlatformName = 'x64'

    .Toolchain_Executable_Prefix = ''
    .Toolchain_Executable_Suffix = '.exe'
    .Toolchain_StaticLibrary_Prefix = ''
    .Toolchain_StaticLibrary_Suffix = '.lib'
    .Toolchain_SharedLibrary_Prefix = ''
    .Toolchain_SharedLibrary_Suffix = '.dll'

    .Toolchain_Define_Prefix = '/D'
    .Toolchain_Define_Suffix = ''
    .Toolchain_IncludePath_Prefix = '/I"'
    .Toolchain_IncludePath_Suffix = '"'
    .Toolchain_LibraryPath_Prefix = '/LIBPATH:"'
    .Toolchain_LibraryPath_Suffix = '"'
    .Toolchain_Library_Prefix = ''
    .Toolchain_Library_Suffix = ''
    .Toolchain_CompilerOptions_SharedLib = ' /D_WINDLL'
    .Toolchain_CompilerOptions_StaticLib = ''
    .Toolchain_LinkerOptions_SharedLib = ' /DLL'
    .Toolchain_LinkerOptions_StaticLib = ''
]

.ToolchainDefinition_Windows_ARMv8_MSVC = [
    .ToolchainName = 'Windows-ARMv8-MSVC'
    .Compiler = 'Compiler-Windows-ARMv8-MSVC'
    .ResCompiler = 'Compiler-Windows-ResourceCompiler'
    .Linker = '$VsToolsLocation$/VC/Tools/MSVC/$VsToolsVersion$/bin/HostX64/arm64/link.exe'
    .Librarian = '$VsToolsLocation$/VC/Tools/MSVC/$VsToolsVersion$/bin/HostX64/arm64/lib.exe'

    .ToolchainArchitecture = 'ARMv8'
    .ToolchainVsPlatformName = 'ARM64'

    .Toolchain_Executable_Prefix = ''
    .Toolchain_Executable_Suffix = '.exe'
    .Toolchain_StaticLibrary_Prefix = ''
    .Toolchain_StaticLibrary_Suffix = '.lib'
    .Toolchain_SharedLibrary_Prefix = ''
    .Toolchain_SharedLibrary_Suffix = '.dll'

    .Toolchain_Define_Prefix = '/D'
    .Toolchain_Define_Suffix = ''
    .Toolchain_IncludePath_Prefix = '/I"'
    .Toolchain_IncludePath_Suffix = '"'
    .Toolchain_LibraryPath_Prefix = '/LIBPATH:"'
    .Toolchain_LibraryPath_Suffix = '"'
    .Toolchain_Library_Prefix = ''
    .Toolchain_Library_Suffix = ''
    .Toolchain_CompilerOptions_SharedLib = ' /D_WINDLL'
    .Toolchain_CompilerOptions_StaticLib = ''
    .Toolchain_LinkerOptions_SharedLib = ' /DLL'
    .Toolchain_LinkerOptions_StaticLib = ''
]

.ToolchainDefinition_Windows_x64_Clang = [
    .ToolchainName = 'Windows-x64-Clang'
]


// Linux specific toolchains
.ToolchainDefinition_Linux_x64_Clang = [
    .ToolchainName = 'Linux-x64-Clang'
]

.ToolchainDefinition_Linux_ARMv8_Clang = [
    .ToolchainName = 'Linux-ARMv8-Clang'
]

Compiler('Compiler-Linux-x64-GCC') {
    .Executable = '/usr/bin/g++'
}

.ToolchainDefinition_Linux_x64_GCC = [
    .ToolchainName = 'Linux-x64-GCC'
    .Compiler = 'Compiler-Linux-x64-GCC'
    .Linker = '/usr/bin/g++'
    .Librarian = '/usr/bin/ar'

    .ToolchainArchitecture = 'x64'
    .ToolchainVsPlatformName = 'x64'

    .Toolchain_Executable_Prefix = ''
    .Toolchain_Executable_Suffix = '.elf'
    .Toolchain_StaticLibrary_Prefix = 'lib'
    .Toolchain_StaticLibrary_Suffix = '.a'
    .Toolchain_SharedLibrary_Prefix = 'lib'
    .Toolchain_SharedLibrary_Suffix = '.so'

    .Toolchain_Define_Prefix = '-D'
    .Toolchain_Define_Suffix = ''
    .Toolchain_IncludePath_Prefix = '-I'
    .Toolchain_IncludePath_Suffix = ''
    .Toolchain_LibraryPath_Prefix = '-L'
    .Toolchain_LibraryPath_Suffix = ''
    .Toolchain_Library_Prefix = '-l'
    .Toolchain_Library_Suffix = ''

    .Toolchain_CompilerOptions_SharedLib = ' -fpic'
    .Toolchain_CompilerOptions_StaticLib = ' -fpic'
    .Toolchain_LinkerOptions_SharedLib = ' -shared'
    .Toolchain_LinkerOptions_StaticLib = ' -static'
]

.ToolchainDefinition_Linux_ARMv8_GCC = [
    .ToolchainName = 'Linux-ARMv8-GCC'
]

// Android specific toolchains
.ToolchainDefinition_Android_x64_Clang = [
    .ToolchainName = 'Android-x64-Clang'
]

.ToolchainDefinition_Android_ARMv8_Clang = [
    .ToolchainName = 'Android-ARMv8-Clang'
]

//--------------------------------------------------------------------------------------------------
// Config definitions

.ConfigDefinition_Windows_MSVC = [
    .ConfigPlatform = 'Windows'
    .ConfigToolchain = 'MSVC'

    .DefaultDefines = ''
        + ' /D_WIN32'
        + ' /D__WINDOWS__'
        + ' /D__STDC_WANT_LIB_EXT1__=1'
        + ' /D__STDINT_MACROS'
        + ' /D__STDINT_LIMITS'
        + ' /D__STDC_CONSTANT_MACROS'
        + ' /D__STDC_FORMAT_MACROS'
        + ' /D__STDC_LIMIT_MACROS'
        + ' /D_HAS_EXCEPTIONS=0'
        + ' /D_HAS_ITERATOR_DEBUGGING=0'
        + ' /D_SCL_SECURE=0'
        + ' /D_SECURE_SCL=0'
        + ' /D_CRT_SECURE_INVALID_PARAMETER='
        + ' /D_UNICODE'
        + ' /DUNICODE'
        + ' /DFMT_SHARED=1'
        + ' /DFMT_EXCEPTIONS=0'

    .CompilerOptions = ''
        + '"%1"'
        + ' /Z7'
        + ' /nologo'                // Don't display compiler logo banner
        + ' /c'                     // Compile files
        + ' /bigobj'                // Increase Number of Sections in .Obj file
        + ' /diagnostics:caret'     // Use caret (^) to indicate error location
        + ' /EHa'                   // Support asynchronous structured exception handling (SEH) with the native C++
        + ' /errorReport:send'      // Automatically sends reports of internal compiler errors to Microsoft
        //+ ' /experimental:preprocessor'     // Enable new compliant preprocessor features when available (not available in VS2019, v16.4.3)
        + ' /FC'                    // Full Path of Source Code File in Diagnostics
        + ' /fp:fast'               // ...reorder, combine, or simplify floating-point operations to optimize floating-point code for speed and space
        + ' /Gd'                    // the __cdecl calling convention for all functions except C++ member functions and functions that are marked __stdcall, __fastcall, or __vectorcall
        + ' /GF'                    // Eliminate Duplicate Strings
        + ' /GR-'                   // Enable Run-Time Type Information
        + ' /Gw'                    // Optimize Global Data
        + ' /Gy'                    // Enable Function-Level Linking
        + ' /JMC-'                  // Disable Just My Code
        + ' /permissive-'           // Enable Standards conformance
        + ' /std:c++latest'         // Specify Language Standard Version
        //+ ' /wd4263'
        //+ ' /wd4264'
        //+ ' /wd4275'
        + ' /WX'                    // Treats all compiler warnings as errors.
        + ' /Zc:__cplusplus'        // Enable the __cplusplus macro to report the supported standard
        + ' /Zc:char8_t'            //
        + ' /Zc:externConstexpr'    // Enable extern constexpr variables
        + ' /Zc:forScope'           // Force Conformance in for Loop Scope
        + ' /Zc:inline'             // Remove unreferenced COMDAT
        + ' /Zc:referenceBinding'   // Enforce reference binding rules
        + ' /Zc:sizedDealloc'       // Enable Global Sized Deallocation Functions
        + ' /Zc:ternary'            // Enforce conditional operator rules
        + ' /Zc:throwingNew'        // Assume operator new throws
        + ' /Zc:wchar_t'            // wchar_t Is Native Type
        // /GL (Whole Program Optimization)
        + .DefaultDefines
        + ' /Fo"%2"'

    .LibrarianOptions = ''
        //+ ' /NODEFAULTLIB'
        + ' /NOLOGO'
        + ' /OUT:"%2" "%1"'
    .LinkerOptions = ''
        //+ ' /NODEFAULTLIB'
        + ' /NOLOGO'
        + ' /OUT:"%2" "%1"'
        + ' /DEBUG'
        + ' /IGNORE:4001'
]

.BaseConfigDefinition_Windows_x64_MSVC = [
    Using(.ConfigDefinition_Windows_MSVC)
    Using(.ToolchainDefinition_Windows_x64_MSVC)

    .CompilerOptions
        + ' /arch:AVX'
        + ' /I"$VsToolsLocation$/VC/Tools/MSVC/$VsToolsVersion$/include"'
        + ' /I"$VsToolsLocation$/VC/Tools/MSVC/$VsToolsVersion$/atlmfc/include"'
        + ' /I"$VsToolsLocation$/VC/Auxiliary/VS/include"'
        + ' /I"$WindowsSdkLocation$\Include\$WindowsSdkVersion$\shared"'
        + ' /I"$WindowsSdkLocation$\Include\$WindowsSdkVersion$\ucrt"'
        + ' /I"$WindowsSdkLocation$\Include\$WindowsSdkVersion$\um"'
        + ' /I"$WindowsSdkLocation$\Include\$WindowsSdkVersion$\winrt"'
    .LinkerOptions
        + ' /MACHINE:X64'
        + ' /LIBPATH:"$VsToolsLocation$/VC/Tools/MSVC/$VsToolsVersion$/lib/x64"'
        + ' /LIBPATH:"$WindowsSdkLocation$\Lib\$WindowsSdkVersion$\um\x64"'
        + ' /LIBPATH:"$WindowsSdkLocation$\Lib\$WindowsSdkVersion$\ucrt\x64"'

    .TargetName = 'Windows-x64'
]

.ConfigDefinition_Windows_x64_MSVC_Debug = [
    Using(.BaseConfigDefinition_Windows_x64_MSVC)
    .ConfigName = 'Debug'

    .CompilerOptions
        + ' /DGX_CONFIG_DEBUG=1'
        + ' /MDd'                   // Use Debug DLL Run-Time Library
        + ' /Od'                    // Disable optimizations
        + ' /Ob0'                   // Disable Inline Function Expansion
        + ' /GS'                    // Enable Buffer Security Check
        + ' /sdl'                   // Enable Additional Security Checks
        + ' /RTCsu'                 // Enable Run-Time Error Checks
    .LinkerOptions
        + ' msvcprtd.lib'
]

.ConfigDefinition_Windows_x64_MSVC_Checked = [
    Using(.BaseConfigDefinition_Windows_x64_MSVC)
    .ConfigName = 'Checked'

    .CompilerOptions
        + ' /DGX_CONFIG_CHECKED=1'
        + ' /MD'                    // Use Release DLL Run-Time Library
        + ' /O2'                    // Optimize for maximum speed
        + ' /Ob1'                   // Enable Inline Function Expansion
        + ' /Zo'                    // Enable Enhance Optimized Debugging
    .LinkerOptions
        + ' msvcprt.lib'
]

.ConfigDefinition_Windows_x64_MSVC_Profile = [
    Using(.BaseConfigDefinition_Windows_x64_MSVC)
    .ConfigName = 'Profile'

    .CompilerOptions
        + ' /DGX_CONFIG_PROFILE=1'
        + ' /MD'                    // Use Release DLL Run-Time Library
        + ' /O2'                    // Optimize for maximum speed
        + ' /Ob2'                   // Enable Inline Function Expansion
        + ' /Oi'                    // Generate Intrinsic Functions
        + ' /Ot'                    // Favor Fast Code
        + ' /Oy-'                   // Enable Frame-Pointer Omission
        + ' /GS-'                   // Disable Buffer Security Check
    .LinkerOptions
        + ' msvcprt.lib'
]

.ConfigDefinition_Windows_x64_MSVC_Release = [
    Using(.BaseConfigDefinition_Windows_x64_MSVC)
    .ConfigName = 'Release'

    .CompilerOptions
        + ' /DGX_CONFIG_RELEASE=1'
        + ' /MD'                    // Use Release DLL Run-Time Library
        + ' /O2'                    // Optimize for maximum speed
        + ' /Ob3'                   // Enable Inline Function Expansion
        + ' /Oi'                    // Generate Intrinsic Functions
        + ' /Ot'                    // Favor Fast Code
        + ' /Oy-'                   // Enable Frame-Pointer Omission
        + ' /GS-'                   // Disable Buffer Security Check
    .LinkerOptions
        + ' msvcprt.lib'
]
.ConfigDefinition_Windows_x64_MSVC = {
    .ConfigDefinition_Windows_x64_MSVC_Debug
    .ConfigDefinition_Windows_x64_MSVC_Checked
    .ConfigDefinition_Windows_x64_MSVC_Profile
    .ConfigDefinition_Windows_x64_MSVC_Release
}
.Global_ConfigDefinitionList + .ConfigDefinition_Windows_x64_MSVC

.BaseConfigDefinition_Windows_ARMv8_MSVC = [
    Using(.ConfigDefinition_Windows_MSVC)
    Using(.ToolchainDefinition_Windows_ARMv8_MSVC)

    .CompilerOptions
        + ' /DGRAPHYTE_MATH_NO_INTRINSICS=1'
        + ' /I"$VsToolsLocation$/VC/Tools/MSVC/$VsToolsVersion$/include"'
        + ' /I"$VsToolsLocation$/VC/Tools/MSVC/$VsToolsVersion$/atlmfc/include"'
        + ' /I"$VsToolsLocation$/VC/Auxiliary/VS/include"'
        + ' /I"$WindowsSdkLocation$\Include\$WindowsSdkVersion$\shared"'
        + ' /I"$WindowsSdkLocation$\Include\$WindowsSdkVersion$\ucrt"'
        + ' /I"$WindowsSdkLocation$\Include\$WindowsSdkVersion$\um"'
        + ' /I"$WindowsSdkLocation$\Include\$WindowsSdkVersion$\winrt"'

    .LinkerOptions
        + ' /MACHINE:ARM64'
        + ' /LIBPATH:"$VsToolsLocation$/VC/Tools/MSVC/$VsToolsVersion$/lib/arm64"'
        + ' /LIBPATH:"$WindowsSdkLocation$\Lib\$WindowsSdkVersion$\um\arm64"'
        + ' /LIBPATH:"$WindowsSdkLocation$\Lib\$WindowsSdkVersion$\ucrt\arm64"'

    .TargetName = 'Windows-ARMv8'
]

.ConfigDefinition_Windows_ARMv8_MSVC_Debug = [
    Using(.BaseConfigDefinition_Windows_ARMv8_MSVC)
    .ConfigName = 'Debug'

    .CompilerOptions
        + ' /DGX_CONFIG_DEBUG=1'
        + ' /MDd'                   // Use Debug DLL Run-Time Library
        + ' /Od'                    // Disable optimizations
        + ' /Ob0'                   // Disable Inline Function Expansion
        + ' /GS'                    // Enable Buffer Security Check
        + ' /sdl'                   // Enable Additional Security Checks
        + ' /RTCsu'                 // Enable Run-Time Error Checks
    .LinkerOptions
        + ' msvcprtd.lib'
]

.ConfigDefinition_Windows_ARMv8_MSVC_Checked = [
    Using(.BaseConfigDefinition_Windows_ARMv8_MSVC)
    .ConfigName = 'Checked'

    .CompilerOptions
        + ' /DGX_CONFIG_CHECKED=1'
        + ' /MD'                    // Use Release DLL Run-Time Library
        + ' /O2'                    // Optimize for maximum speed
        + ' /Ob1'                   // Enable Inline Function Expansion
        + ' /Zo'                    // Enable Enhance Optimized Debugging
    .LinkerOptions
        + ' msvcprt.lib'
]

.ConfigDefinition_Windows_ARMv8_MSVC_Profile = [
    Using(.BaseConfigDefinition_Windows_ARMv8_MSVC)
    .ConfigName = 'Profile'

    .CompilerOptions
        + ' /DGX_CONFIG_PROFILE=1'
        + ' /MD'                    // Use Release DLL Run-Time Library
        + ' /O2'                    // Optimize for maximum speed
        + ' /Ob2'                   // Enable Inline Function Expansion
        + ' /Oi'                    // Generate Intrinsic Functions
        + ' /Ot'                    // Favor Fast Code
        + ' /Oy-'                   // Enable Frame-Pointer Omission
        + ' /GS-'                   // Disable Buffer Security Check
    .LinkerOptions
        + ' msvcprt.lib'
]

.ConfigDefinition_Windows_ARMv8_MSVC_Release = [
    Using(.BaseConfigDefinition_Windows_ARMv8_MSVC)
    .ConfigName = 'Release'

    .CompilerOptions
        + ' /DGX_CONFIG_RELEASE=1'
        + ' /MD'                    // Use Release DLL Run-Time Library
        + ' /O2'                    // Optimize for maximum speed
        + ' /Ob3'                   // Enable Inline Function Expansion
        + ' /Oi'                    // Generate Intrinsic Functions
        + ' /Ot'                    // Favor Fast Code
        + ' /Oy-'                   // Enable Frame-Pointer Omission
        + ' /GS-'                   // Disable Buffer Security Check
    .LinkerOptions
        + ' msvcprt.lib'
        + ' /LTCG'
]
.ConfigDefinition_Windows_ARMv8_MSVC = {
    .ConfigDefinition_Windows_ARMv8_MSVC_Debug
    .ConfigDefinition_Windows_ARMv8_MSVC_Checked
    .ConfigDefinition_Windows_ARMv8_MSVC_Profile
    .ConfigDefinition_Windows_ARMv8_MSVC_Release
}
.Global_ConfigDefinitionList + .ConfigDefinition_Windows_ARMv8_MSVC

//--------------------------------------------------------------------------------------------------
// Linux - x64 - Clang

.BaseConfigDefinition_Linux_Clang = [
    .ConfigPlatform = 'Linux'
    .ConfigToolchain = 'Clang'

    .CompilerOptions
        = ' %1 -c -o %2'
        + ' -std=c++2a'
        + ' -fconcepts'

    .LibrarianOptions = ''
    .LinkerOptions = ''
]

.BaseConfigDefinition_Linux_x64_Clang = [
    Using(.BaseConfigDefinition_Linux_Clang)
]


//--------------------------------------------------------------------------------------------------
// Linux - x64 - GCC

.BaseConfigDefinition_Linux_GCC = [
    .ConfigPlatform = 'Linux'
    .ConfigToolchain = 'GCC'

    .CompilerOptions
        = ' -o "%2" "%1" -c -g'
        + ' -std=c++2a'
        + ' -fconcepts'

    .CompilerOptionsC
        = ' -std=c11'

    .LinkerOptions
        = '"%1" -o "%2"'
        + ' -lc'
        + ' -lm'
        + ' -lstdc++'
        + ' -pie'
    .LibrarianOptions
        = 'rcs "%2" "%1"'
]

.BaseConfigDefinition_Linux_x64_GCC = [
    Using(.ToolchainDefinition_Linux_x64_GCC)
    Using(.BaseConfigDefinition_Linux_GCC)

    .CompilerOptions
        + ' -mavx'
        + ' -msse4.1'
        + ' -msse3'
        + ' -mssse3'
        + ' -msse2'
        + ' -m64'
        + ' -fPIC'
]

.ConfigDefinition_Linux_x64_GCC_Debug = [
    Using(.BaseConfigDefinition_Linux_x64_GCC)
    .ConfigName = 'Debug'

    .CompilerOptions
        + ' -DGX_CONFIG_DEBUG=1'
        + ' -O0'
]

.ConfigDefinition_Linux_x64_GCC_Checked = [
    Using(.BaseConfigDefinition_Linux_x64_GCC)
    .ConfigName = 'Checked'

    .CompilerOptions
        + ' -DGX_CONFIG_CHECKED=1'
        + ' -O1'
]

.ConfigDefinition_Linux_x64_GCC_Profile = [
    Using(.BaseConfigDefinition_Linux_x64_GCC)
    .ConfigName = 'Profile'

    .CompilerOptions
        + ' -DGX_CONFIG_PROFILE=1'
        + ' -O2'
]

.ConfigDefinition_Linux_x64_GCC_Release = [
    Using(.BaseConfigDefinition_Linux_x64_GCC)
    .ConfigName = 'Release'

    .CompilerOptions
        + ' -DGX_CONFIG_RELEASE=1'
        + ' -O3'
]

.ConfigDefinition_Linux_x64_GCC = {
    .ConfigDefinition_Linux_x64_GCC_Debug
    .ConfigDefinition_Linux_x64_GCC_Checked
    .ConfigDefinition_Linux_x64_GCC_Profile
    .ConfigDefinition_Linux_x64_GCC_Release
}
.Global_ConfigDefinitionList + .ConfigDefinition_Linux_x64_GCC
