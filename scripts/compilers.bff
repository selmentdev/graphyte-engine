#once
#include "compiler.msvs.bff"

Compiler('Compiler-MSVC-x64') {
    .Root = '$VsToolsLocation$/VC/Tools/MSVC/$VsToolsVersion$/bin/HostX64/x64'
    .Executable = '$Root$/cl.exe'
}

Compiler('Compiler-MSVC-ARMv8') {
    .Root = '$VsToolsLocation$/VC/Tools/MSVC/$VsToolsVersion$/bin/HostX64/arm64'
    .Executable = '$Root$/cl.exe'
}

.Toolset_Windows_MSVC_x64 = [
    .LangResId = '1033'
    .ToolsetName = 'MSVC-x64'
    .ToolsetRoot = '$VsToolsLocation$/VC/Tools/MSVC/$VsToolsVersion$'
    .ToolsetRootBin = '$ToolsetRoot$/bin/HostX64/x64'

    .Compiler = 'Compiler-MSVC-x64'
    .Linker = '$ToolsetRootBin$/link.exe'
    .Librarian = '$ToolsetRootBin$/lib.exe'
]

.Toolset_Windows_MSVC_ARMv8 = [
    .LangResId = '1033'
    .ToolsetName = 'MSVC-ARMv8'
    .ToolsetRoot = '$VsToolsLocation$/VC/Tools/MSVC/$VsToolsVersion$'
    .ToolsetRootBin = '$ToolsetRoot$/bin/HostX64/arm64'

    .Compiler = 'Compiler-MSVC-ARMv8'
    .Linker = '$ToolsetRootBin$/link.exe'
    .Librarian = '$ToolsetRootBin$/lib.exe'
]

.Toolset_Linux_Clang_x64 = [
    .ToolsetRoot = '/usr/bin'
    .ToolsetCompiler = '$ToolsetRoot$/clang++'
    .ToolsetLinker = '$ToolsetRoot$/lld'
    .ToolsetLibrarian = '$ToolsetRoot$/ar'
    .ToolsetAssembly = '$ToolsetRoot$/clang++'
]
